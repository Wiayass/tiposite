// –ú–∞—Å—Å–∏–≤ —Å –ø—Ä–æ–¥—É–∫—Ç–∞–º–∏
let products = [
    "–ú—É–∫–∞", "–ú–æ–ª–æ–∫–æ", "–Ø–π—Ü–∞", "–°–∞—Ö–∞—Ä", "–ú–∞—Å–ª–æ", "–¢–≤–æ—Ä–æ–≥", "–ö–∞—Ä—Ç–æ—Ñ–µ–ª—å", "–ü–æ–º–∏–¥–æ—Ä—ã", "–õ—É–∫",
    "–ß–µ—Å–Ω–æ–∫", "–ö–∞–ø—É—Å—Ç–∞", "–ü–µ—Ä–µ—Ü", "–ú–æ—Ä–∫–æ–≤—å", "–ì—Ä–µ—á–∫–∞", "–†–∏—Å", "–ú–∞–∫–∞—Ä–æ–Ω—ã", "–°—ã—Ä", "–ì—Ä–∏–±—ã", "–°–º–µ—Ç–∞–Ω–∞", "–ú–µ–¥"
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ —Å–ø–∏—Å–æ–∫ –ø–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
];







// –≠–ª–µ–º–µ–Ω—Ç—ã DOM
//Search
const searchBar = document.getElementById("search-bar");
const resultsContainer = document.getElementById("results-container");


//prosucts

const productSearchBar = document.getElementById("product-search-bar");
const productResultsContainer = document.getElementById("product-results-container");
const cartList = document.getElementById("cart-list");
const recipesOutput = document.getElementById("recipes-output");
const getRecipesBtn = document.getElementById("get-recipes-btn");





// –ü–æ–ª—É—á–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã Navbar
const menuToggle1 = document.getElementById('menu-toggle1');
const navbarLinks1 = document.getElementById('navbar-links1');

// –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞
menuToggle1.addEventListener('click', () => {
    menuToggle1.classList.toggle('active'); // –ê–Ω–∏–º–∞—Ü–∏—è –∏–∫–æ–Ω–∫–∏
    navbarLinks1.classList.toggle('active'); // –ü–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
});


// –ó–∞–∫—Ä—ã—Ç–∏–µ —Å–ø–∏—Å–∫–∞ –ø–æ–¥—Å–∫–∞–∑–æ–∫ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –ø–æ–ª—è
document.addEventListener("click", (e) => {
    if (!e.target.closest(".search-container")) {
        resultsContainer.style.display = "none";
    }
});

//Search

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ for search
document.addEventListener("DOMContentLoaded", () => {
    const animatedElements = document.querySelectorAll(".search-container");

    const observer = new IntersectionObserver((entries, observer) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                // –≠–ª–µ–º–µ–Ω—Ç –≤ –∑–æ–Ω–µ –≤–∏–¥–∏–º–æ—Å—Ç–∏ ‚Äî –¥–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å
                entry.target.classList.add("show");
                observer.unobserve(entry.target); // –û—Ç–∫–ª—é—á–∞–µ–º –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ –∑–∞ —ç—Ç–∏–º —ç–ª–µ–º–µ–Ω—Ç–æ–º
            } else {
                // –î–ª—è –Ω–µ–≤–∏–¥–∏–º—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
                entry.target.classList.remove("show");
            }
        });
    }, {
        threshold: 0.1 // –ü—Ä–æ—Ü–µ–Ω—Ç –≤–∏–¥–∏–º–æ—Å—Ç–∏ —ç–ª–µ–º–µ–Ω—Ç–∞, –ø–æ—Å–ª–µ –∫–æ—Ç–æ—Ä–æ–≥–æ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∞–Ω–∏–º–∞—Ü–∏—è
    });

    animatedElements.forEach(element => observer.observe(element));
});



// Fetch the product data
fetch('recipes.json')
.then(response => response.json())
.then(data => {
    const searchBar = document.getElementById('search-bar');
    const resultsContainer = document.getElementById('results-container');

    // Listen for input in the search bar
    searchBar.addEventListener('input', (e) => {
        const query = e.target.value.toLowerCase();
        resultsContainer.innerHTML = ''; // Clear previous results

        if (query) {
            const filteredProducts = data.filter(product => product.title.toLowerCase().startsWith(query));
            if (filteredProducts.length){
                filteredProducts.forEach(product => {
                    const resultItem = document.createElement('div');
                    resultItem.classList.add('search-result-item');
                    resultItem.textContent = product.title;
                    resultItem.addEventListener('click', () => {
                        window.location.href = `recipe.html?id=${product.id}`;
                    });
                    resultsContainer.appendChild(resultItem);
                });
            } else {
                const noResultsDiv = document.createElement("div");
                noResultsDiv.textContent = "–ù–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤";
                
                resultsContainer.appendChild(noResultsDiv);
            }
    
            resultsContainer.style.display = "block"; // –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–¥—Å–∫–∞–∑–∫–∏
            
            resultsContainer.style.display = 'block';

        } else {
            resultsContainer.style.display = "none"; // –°–∫—Ä—ã—Ç—å –ø–æ–¥—Å–∫–∞–∑–∫–∏
        }
    });
});

// Close the search results when clicking outside
document.addEventListener("click", (e) => {
    if (!e.target.closest(".search-container")) {
        resultsContainer.style.display = "none";
    }
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ for things
productSearchBar.addEventListener("input", () => {
    const query = productSearchBar.value.toLowerCase();
    productResultsContainer.innerHTML = ""; // –û—á–∏—Å—Ç–∫–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤

    if (query) {
        const filteredProducts = products.filter(product =>
            product.toLowerCase().startsWith(query) //—á—Ç–æ–±—ã –ø—Ä–æ–¥—É–∫—Ç—ã –∏—Å–∫–∞–ª–∏—Å—å –ø–æ –ø–µ—Ä–≤–æ–π –±—É–∫–≤–µ
        );

        if (filteredProducts.length) {
            filteredProducts.forEach(product => {
                const div = document.createElement("div");
                div.textContent = product;
                div.addEventListener("click", () => {
                    addToCart(product); // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞ –≤ –∫–æ—Ä–∑–∏–Ω—É
                    productSearchBar.value = ""; // –û—á–∏—Å—Ç–∫–∞ –ø–æ–ª—è –ø–æ–∏—Å–∫–∞
                    productResultsContainer.innerHTML = ""; // –û—á–∏—Å—Ç–∫–∞ —Å–ø–∏—Å–∫–∞
                });
                productResultsContainer.appendChild(div);
            });
        } else {
            productResultsContainer.innerHTML = `<div>–ù–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤</div>`;
        }

        productResultsContainer.style.display = "block"; // –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–¥—Å–∫–∞–∑–∫–∏
    } else {
        productResultsContainer.style.display = "none"; // –°–∫—Ä—ã—Ç—å –ø–æ–¥—Å–∫–∞–∑–∫–∏
    }
});


// –ú–∞—Å—Å–∏–≤ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤
let cart = [];



// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–µ—Ü–µ–ø—Ç–æ–≤ –∏–∑ —Ñ–∞–π–ª–∞ recipes.json
async function loadRecipes() {
    try {
        const response = await fetch("recipes.json");
        if (!response.ok) throw new Error("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ä–µ—Ü–µ–ø—Ç—ã");
        const recipes = await response.json();
        return recipes;
    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–µ—Ü–µ–ø—Ç–æ–≤:", error);
        return [];
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏—è –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö —Ä–µ—Ü–µ–ø—Ç–æ–≤
async function findRecipes(selectedProducts) {
    const recipes = await loadRecipes();
    // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Ä–µ—Ü–µ–ø—Ç–æ–≤, —Å–æ–¥–µ—Ä–∂–∞—â–∏—Ö –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã
    return recipes.filter(recipe => {
        const recipeIngredients = recipe.ingredients.map(ingredient => ingredient.toLowerCase());
        return selectedProducts.every(product => recipeIngredients.includes(product.toLowerCase()));
    });
}


// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–∞ –≤ –∫–æ—Ä–∑–∏–Ω—É
function addToCart(product) {
    if (!cart.includes(product)) {
        // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç —Å–ø–∏—Å–∫–∞
        cart.push(product);
        const li = document.createElement("li");
        li.style.display = "flex";
        li.style.justifyContent = "space-between";
        li.style.alignItems = "center";
        li.style.padding = "8px 0";
        li.style.borderBottom = "1px solid #ccc"; // –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å –º–µ–∂–¥—É —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏

        // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –ø—Ä–æ–¥—É–∫—Ç–∞
        const productName = document.createElement("span");
        productName.textContent = product;
        productName.style.flex = "1";

        // –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É —É–¥–∞–ª–µ–Ω–∏—è —Å –∏–∫–æ–Ω–∫–æ–π –º—É—Å–æ—Ä–Ω–æ–≥–æ –±–∞–∫–∞
        const removeBtn = document.createElement("button");
        removeBtn.innerHTML = "üóëÔ∏è"; // –°–∏–º–≤–æ–ª –º—É—Å–æ—Ä–Ω–æ–≥–æ –±–∞–∫–∞
        removeBtn.style.backgroundColor = "transparent";
        removeBtn.style.border = "none";
        removeBtn.style.cursor = "pointer";
        removeBtn.style.color = "#ff4d4d"; // –ö—Ä–∞—Å–Ω—ã–π —Ü–≤–µ—Ç –¥–ª—è –∏–∫–æ–Ω–∫–∏
        removeBtn.style.fontSize = "18px";

        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–∞
        removeBtn.addEventListener("click", () => {
            cartList.removeChild(li); // –£–¥–∞–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç —Å–ø–∏—Å–∫–∞
            cart = cart.filter(item => item !== product); // –£–¥–∞–ª—è–µ–º –ø—Ä–æ–¥—É–∫—Ç –∏–∑ –º–∞—Å—Å–∏–≤–∞
        });

        // –í—Å—Ç–∞–≤–ª—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞ –∏ –∫–Ω–æ–ø–∫—É —É–¥–∞–ª–µ–Ω–∏—è –≤ —ç–ª–µ–º–µ–Ω—Ç —Å–ø–∏—Å–∫–∞
        li.appendChild(productName);
        li.appendChild(removeBtn);

        // –î–æ–±–∞–≤–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç —Å–ø–∏—Å–∫–∞ –≤ –∫–æ—Ä–∑–∏–Ω—É
        cartList.appendChild(li);
    }

    // –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è: –¥–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–¥—É–∫—Ç –≤ –∫–æ—Ä–∑–∏–Ω—É –ø—Ä–∏ –ø–æ–∏—Å–∫–µ
    productSearchBar.addEventListener("keydown", (e) => {
        if (e.key === "Enter" && productSearchBar.value.trim() !== "") {
            addProductToCart(productSearchBar.value.trim()); // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–¥—É–∫—Ç –≤ –∫–æ—Ä–∑–∏–Ω—É
            productSearchBar.value = ""; // –û—á–∏—â–∞–µ–º —Å—Ç—Ä–æ–∫—É –ø–æ–∏—Å–∫–∞
        }
    })
}




// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ü–æ–ª—É—á–∏—Ç—å —Ä–µ—Ü–µ–ø—Ç—ã"
getRecipesBtn.addEventListener("click", async () => {
    if (cart.length === 0) {
        // –ï—Å–ª–∏ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
        recipesOutput.innerHTML = `
            <img 
                src="images/photo_2024-11-29_19-09-29.jpg" 
                alt="–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ" 
                style="width: 100%; border-radius: 8px;">
        `;
        recipesOutput.style.display = "block";
        setTimeout(() => {
            recipesOutput.classList.add("active");
        }, 10);

        setTimeout(() => {
            recipesOutput.classList.remove("active");
            setTimeout(() => {
                recipesOutput.style.display = "none";
            }, 500);
        }, 3000);
    } else {
        
        const matchedRecipes = await findRecipes(cart); // –ù–∞—Ö–æ–¥–∏–º –ø–æ–¥—Ö–æ–¥—è—â–∏–µ —Ä–µ—Ü–µ–ø—Ç—ã
        if (cart.length > 0 && matchedRecipes.length > 0) {
            localStorage.setItem("matchedRecipes", JSON.stringify(matchedRecipes));
            localStorage.setItem("cartProducts", JSON.stringify(cart)); // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–ø–∏—Å–æ–∫ –≤ localStorage
            window.location.href = "search.html"; // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –¥—Ä—É–≥—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
        } else {
            alert("–í—ã–±–µ—Ä–∏—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –ø—Ä–æ–¥—É–∫—Ç!");
        }

        
    }
});









//ANIMATION

//navbar animation
document.addEventListener("DOMContentLoaded", () => {
    const animatedElements = document.querySelectorAll(".navbar");

    const observer = new IntersectionObserver((entries, observer) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                // –≠–ª–µ–º–µ–Ω—Ç –≤ –∑–æ–Ω–µ –≤–∏–¥–∏–º–æ—Å—Ç–∏ ‚Äî –¥–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å
                entry.target.classList.add("show");
                observer.unobserve(entry.target); // –û—Ç–∫–ª—é—á–∞–µ–º –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ –∑–∞ —ç—Ç–∏–º —ç–ª–µ–º–µ–Ω—Ç–æ–º
            } else {
                // –î–ª—è –Ω–µ–≤–∏–¥–∏–º—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
                entry.target.classList.remove("show");
            }
        });
    }, {
        threshold: 0.1 // –ü—Ä–æ—Ü–µ–Ω—Ç –≤–∏–¥–∏–º–æ—Å—Ç–∏ —ç–ª–µ–º–µ–Ω—Ç–∞, –ø–æ—Å–ª–µ –∫–æ—Ç–æ—Ä–æ–≥–æ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∞–Ω–∏–º–∞—Ü–∏—è
    });

    animatedElements.forEach(element => observer.observe(element));
});



//things

document.addEventListener("DOMContentLoaded", () => {
    const animatedElements = document.querySelectorAll(".things");

    const observer = new IntersectionObserver((entries, observer) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                // –≠–ª–µ–º–µ–Ω—Ç –≤ –∑–æ–Ω–µ –≤–∏–¥–∏–º–æ—Å—Ç–∏ ‚Äî –¥–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å
                entry.target.classList.add("show");
                observer.unobserve(entry.target); // –û—Ç–∫–ª—é—á–∞–µ–º –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ –∑–∞ —ç—Ç–∏–º —ç–ª–µ–º–µ–Ω—Ç–æ–º
            } else {
                // –î–ª—è –Ω–µ–≤–∏–¥–∏–º—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
                entry.target.classList.remove("show");
            }
        });
    }, {
        threshold: 0.1 // –ü—Ä–æ—Ü–µ–Ω—Ç –≤–∏–¥–∏–º–æ—Å—Ç–∏ —ç–ª–µ–º–µ–Ω—Ç–∞, –ø–æ—Å–ª–µ –∫–æ—Ç–æ—Ä–æ–≥–æ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∞–Ω–∏–º–∞—Ü–∏—è
    });

    animatedElements.forEach(element => observer.observe(element));
});

//cite_block
document.addEventListener("DOMContentLoaded", () => {
    const animatedElements = document.querySelectorAll(".cite_block");

    const observer = new IntersectionObserver((entries, observer) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                // –≠–ª–µ–º–µ–Ω—Ç –≤ –∑–æ–Ω–µ –≤–∏–¥–∏–º–æ—Å—Ç–∏ ‚Äî –¥–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å
                entry.target.classList.add("show");
                observer.unobserve(entry.target); // –û—Ç–∫–ª—é—á–∞–µ–º –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ –∑–∞ —ç—Ç–∏–º —ç–ª–µ–º–µ–Ω—Ç–æ–º
            } else {
                // –î–ª—è –Ω–µ–≤–∏–¥–∏–º—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
                entry.target.classList.remove("show");
            }
        });
    }, {
        threshold: 0.1 // –ü—Ä–æ—Ü–µ–Ω—Ç –≤–∏–¥–∏–º–æ—Å—Ç–∏ —ç–ª–µ–º–µ–Ω—Ç–∞, –ø–æ—Å–ª–µ –∫–æ—Ç–æ—Ä–æ–≥–æ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∞–Ω–∏–º–∞—Ü–∏—è
    });

    animatedElements.forEach(element => observer.observe(element));
});





//card
document.addEventListener("DOMContentLoaded", () => {
    const animatedElements = document.querySelectorAll(".card-container");

    const observer = new IntersectionObserver((entries, observer) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                // –≠–ª–µ–º–µ–Ω—Ç –≤ –∑–æ–Ω–µ –≤–∏–¥–∏–º–æ—Å—Ç–∏ ‚Äî –¥–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å
                entry.target.classList.add("show");
                observer.unobserve(entry.target); // –û—Ç–∫–ª—é—á–∞–µ–º –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ –∑–∞ —ç—Ç–∏–º —ç–ª–µ–º–µ–Ω—Ç–æ–º
            } else {
                // –î–ª—è –Ω–µ–≤–∏–¥–∏–º—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
                entry.target.classList.remove("show");
            }
        });
    }, {
        threshold: 0.1 // –ü—Ä–æ—Ü–µ–Ω—Ç –≤–∏–¥–∏–º–æ—Å—Ç–∏ —ç–ª–µ–º–µ–Ω—Ç–∞, –ø–æ—Å–ª–µ –∫–æ—Ç–æ—Ä–æ–≥–æ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∞–Ω–∏–º–∞—Ü–∏—è
    });

    animatedElements.forEach(element => observer.observe(element));
});
    

//footer
document.addEventListener("DOMContentLoaded", () => {
    const animatedElements = document.querySelectorAll(".footer");

    const observer = new IntersectionObserver((entries, observer) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                // –≠–ª–µ–º–µ–Ω—Ç –≤ –∑–æ–Ω–µ –≤–∏–¥–∏–º–æ—Å—Ç–∏ ‚Äî –¥–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å
                entry.target.classList.add("show");
                observer.unobserve(entry.target); // –û—Ç–∫–ª—é—á–∞–µ–º –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ –∑–∞ —ç—Ç–∏–º —ç–ª–µ–º–µ–Ω—Ç–æ–º
            } else {
                // –î–ª—è –Ω–µ–≤–∏–¥–∏–º—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
                entry.target.classList.remove("show");
            }
        });
    }, {
        threshold: 0.1 // –ü—Ä–æ—Ü–µ–Ω—Ç –≤–∏–¥–∏–º–æ—Å—Ç–∏ —ç–ª–µ–º–µ–Ω—Ç–∞, –ø–æ—Å–ª–µ –∫–æ—Ç–æ—Ä–æ–≥–æ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∞–Ω–∏–º–∞—Ü–∏—è
    });

    animatedElements.forEach(element => observer.observe(element));
});

//footer-bottom
document.addEventListener("DOMContentLoaded", () => {
    const animatedElements = document.querySelectorAll(".footer-bottom");

    const observer = new IntersectionObserver((entries, observer) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                // –≠–ª–µ–º–µ–Ω—Ç –≤ –∑–æ–Ω–µ –≤–∏–¥–∏–º–æ—Å—Ç–∏ ‚Äî –¥–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å
                entry.target.classList.add("show");
                observer.unobserve(entry.target); // –û—Ç–∫–ª—é—á–∞–µ–º –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ –∑–∞ —ç—Ç–∏–º —ç–ª–µ–º–µ–Ω—Ç–æ–º
            } else {
                // –î–ª—è –Ω–µ–≤–∏–¥–∏–º—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
                entry.target.classList.remove("show");
            }
        });
    }, {
        threshold: 0.1 // –ü—Ä–æ—Ü–µ–Ω—Ç –≤–∏–¥–∏–º–æ—Å—Ç–∏ —ç–ª–µ–º–µ–Ω—Ç–∞, –ø–æ—Å–ª–µ –∫–æ—Ç–æ—Ä–æ–≥–æ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∞–Ω–∏–º–∞—Ü–∏—è
    });

    animatedElements.forEach(element => observer.observe(element));
});



//slider

document.addEventListener("DOMContentLoaded", () => {
    const animatedElements = document.querySelectorAll(".animated-element");
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–ª–∞—Å—Å–∞ 'show' –∫–æ –≤—Å–µ–º —ç–ª–µ–º–µ–Ω—Ç–∞–º
    animatedElements.forEach((element, index) => {
            setTimeout(() => {
                element.classList.add("show");
            }, index * 500); // –ó–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ–≥–æ –ø–æ—è–≤–ª–µ–Ω–∏—è
        });
    });


    document.addEventListener("DOMContentLoaded", () => {
        const slidesContainer = document.querySelector(".slides");
        const slides = document.querySelectorAll(".slide");
        const prevButton = document.querySelector(".prev");
        const nextButton = document.querySelector(".next");

        const gap = 20; // –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –º–µ–∂–¥—É —Å–ª–∞–π–¥–∞–º–∏
        const slideWidth = slides[0].clientWidth + gap; // –®–∏—Ä–∏–Ω–∞ —Å–ª–∞–π–¥–∞ + gap
        let currentIndex = 0; // –°—Ç–∞—Ä—Ç–æ–≤–∞—è –ø–æ–∑–∏—Ü–∏—è (—É—á–∏—Ç—ã–≤–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–ª–æ–Ω—ã)

        // –ö–ª–æ–Ω–∏—Ä—É–µ–º —Å–ª–∞–π–¥—ã
        const totalSlides = slides.length;
        const clonesBefore = [];
        const clonesAfter = [];

        // –°–æ–∑–¥–∞–µ–º –∫–ª–æ–Ω—ã –¥–ª—è –Ω–∞—á–∞–ª–∞ –∏ –∫–æ–Ω—Ü–∞
        slides.forEach((slide, index) => {
            const cloneBefore = slide.cloneNode(true);
            const cloneAfter = slide.cloneNode(true);

            cloneBefore.classList.add("clone");
            cloneAfter.classList.add("clone");

            clonesBefore.push(cloneBefore);
            clonesAfter.push(cloneAfter);
        });

        // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–º—É —Å–ª–∞–π–¥—É
        function prevSlide() {
            if (currentIndex <= 0) {
                // –ï—Å–ª–∏ —ç—Ç–æ –ø–µ—Ä–≤—ã–π —Å–ª–∞–π–¥, –ø–ª–∞–≤–Ω–æ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –∫–ª–æ–Ω—É –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ
                slidesContainer.style.transition = "transform 3s ease";
                currentIndex--;
                slidesContainer.style.transform = `translateX(${-slideWidth * currentIndex}px)`;

                // –ß–µ—Ä–µ–∑ –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –ø–æ—Å–ª–µ–¥–Ω–∏–π —Å–ª–∞–π–¥ –±–µ–∑ –∞–Ω–∏–º–∞—Ü–∏–∏
                setTimeout(() => {
                    slidesContainer.style.transition = "none";
                    currentIndex = totalSlides - 1;
                    slidesContainer.style.transform = `translateX(${-slideWidth * currentIndex}px)`;
                }, 5000);
            } else {
                currentIndex--;
                slidesContainer.style.transition = "transform 3s ease";
                slidesContainer.style.transform = `translateX(${-slideWidth * currentIndex}px)`;
            }
        }

        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ
        let autoSlideInterval = setInterval(nextSlide, 5000);

        // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –≤ DOM
        clonesBefore.reverse().forEach((clone) => {
            slidesContainer.insertBefore(clone, slidesContainer.firstChild);
        });

        clonesAfter.forEach((clone) => {
            slidesContainer.appendChild(clone);
        });

        const allSlides = document.querySelectorAll(".slide"); // –û–±–Ω–æ–≤–ª—è–µ–º NodeList –ø–æ—Å–ª–µ –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
        slidesContainer.style.transform = `translateX(${-slideWidth * currentIndex}px)`;

        // –ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ —Å–ª–∞–π–¥–æ–≤
        function moveToIndex(index) {
            slidesContainer.style.transition = "transform 3s ease";
            slidesContainer.style.transform = `translateX(${-slideWidth * index}px)`;
        }

        function nextSlide() {
            currentIndex++;
            moveToIndex(currentIndex);

            if (currentIndex >= totalSlides + 2) {
                setTimeout(() => {
                    slidesContainer.style.transition = "none";
                    currentIndex = 2; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –Ω–∞ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –ø–µ—Ä–≤—ã–π —Å–ª–∞–π–¥
                    slidesContainer.style.transform = `translateX(${-slideWidth * currentIndex}px)`;
                }, 5000);
            }
        }

        function prevSlide() {
            currentIndex--;
            moveToIndex(currentIndex);

            if (currentIndex <= 1) {
                setTimeout(() => {
                    slidesContainer.style.transition = "none";
                    currentIndex = totalSlides + 1; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –Ω–∞ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –ø–æ—Å–ª–µ–¥–Ω–∏–π —Å–ª–∞–π–¥
                    slidesContainer.style.transform = `translateX(${-slideWidth * currentIndex}px)`;
                }, 5000);
            }
        }

        nextButton.addEventListener("click", nextSlide);
        prevButton.addEventListener("click", prevSlide);

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–≤–∞–π–ø–æ–≤
        let touchStartX = 0;
        let touchEndX = 0;

        slidesContainer.addEventListener("touchstart", (e) => {
            touchStartX = e.changedTouches[0].screenX;
        });

        slidesContainer.addEventListener("touchend", (e) => {
            touchEndX = e.changedTouches[0].screenX;

            if (touchStartX > touchEndX + 50) {
                nextSlide();
            } else if (touchStartX < touchEndX - 50) {
                prevSlide();
            }
        });
    });


    //slider
document.addEventListener("DOMContentLoaded", () => {
    const animatedElements = document.querySelectorAll(".slider");

    const observer = new IntersectionObserver((entries, observer) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                // –≠–ª–µ–º–µ–Ω—Ç –≤ –∑–æ–Ω–µ –≤–∏–¥–∏–º–æ—Å—Ç–∏ ‚Äî –¥–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å
                entry.target.classList.add("show");
                observer.unobserve(entry.target); // –û—Ç–∫–ª—é—á–∞–µ–º –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ –∑–∞ —ç—Ç–∏–º —ç–ª–µ–º–µ–Ω—Ç–æ–º
            } else {
                // –î–ª—è –Ω–µ–≤–∏–¥–∏–º—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
                entry.target.classList.remove("show");
            }
        });
    }, {
        threshold: 0.1 // –ü—Ä–æ—Ü–µ–Ω—Ç –≤–∏–¥–∏–º–æ—Å—Ç–∏ —ç–ª–µ–º–µ–Ω—Ç–∞, –ø–æ—Å–ª–µ –∫–æ—Ç–æ—Ä–æ–≥–æ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∞–Ω–∏–º–∞—Ü–∏—è
    });

    animatedElements.forEach(element => observer.observe(element));
});


document.addEventListener("DOMContentLoaded", () => {
    const animatedElements = document.querySelectorAll(".aboutus");

    const observer = new IntersectionObserver((entries, observer) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                // –≠–ª–µ–º–µ–Ω—Ç –≤ –∑–æ–Ω–µ –≤–∏–¥–∏–º–æ—Å—Ç–∏ ‚Äî –¥–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å
                entry.target.classList.add("show");
                observer.unobserve(entry.target); // –û—Ç–∫–ª—é—á–∞–µ–º –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ –∑–∞ —ç—Ç–∏–º —ç–ª–µ–º–µ–Ω—Ç–æ–º
            } else {
                // –î–ª—è –Ω–µ–≤–∏–¥–∏–º—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
                entry.target.classList.remove("show");
            }
        });
    }, {
        threshold: 0.1 // –ü—Ä–æ—Ü–µ–Ω—Ç –≤–∏–¥–∏–º–æ—Å—Ç–∏ —ç–ª–µ–º–µ–Ω—Ç–∞, –ø–æ—Å–ª–µ –∫–æ—Ç–æ—Ä–æ–≥–æ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∞–Ω–∏–º–∞—Ü–∏—è
    });

    animatedElements.forEach(element => observer.observe(element));
});
